version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    # This entrypoint ensures the script is executable and then runs it.
    # The script configures and starts the Apache server on the correct port.
    entrypoint: ["/bin/sh", "-c", "chmod +x /var/www/html/docker-entrypoint.sh && /var/www/html/docker-entrypoint.sh"]
    volumes:
      - ./:/var/www/html/
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Use the service name 'db' for inter-container communication
      - DB_HOST=db
      - DB_NAME=network_monitor
      - DB_USER=user
      - DB_PASSWORD=password
      - MYSQL_ROOT_PASSWORD=rootpassword
      - ADMIN_PASSWORD=password
    restart: unless-stopped
    # Changed host port from 80 to 8080 to avoid 'port already allocated' error
    ports:
      - "8080:80" # Expose app on port 8080 of the host

  db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: network_monitor
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - db_data:/var/lib/mysql
    ports:
      # Expose the database port to the host for external tools if needed
      - "3306:3306"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 10

volumes:
  db_data: